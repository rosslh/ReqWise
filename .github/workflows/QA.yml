name: Quality assurance

on:
  push:
    branches:
      - "**"

jobs:
  lint-check-licenses:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.2
      - uses: actions/setup-node@v2.1.1
        with:
          node-version: "10"
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Lint client and check licenses
        working-directory: ./client
        run: |
          npm install --no-optional
          npm run lint
          npm run licenseChecker
      - name: Lint server and check licenses
        working-directory: ./server
        run: |
          npm install
          npm run lint
          npm run licenseChecker
  test-client:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.2
      - uses: actions/setup-node@v2.1.1
        with:
          node-version: "10"
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - uses: harmon758/postgresql-action@v1
        with:
          postgresql version: "11"
          postgresql db: "reqwise"
          postgresql user: "postgres"
          postgresql password: "1234"
      - name: Install server dependencies
        working-directory: ./server
        run: |
          npm install
        env:
          KNEXMODE: dev
      - name: Install client dependencies
        working-directory: ./client
        run: |
          npm install --no-optional
      - name: Seed database and run tests
        uses: cypress-io/github-action@v2
        with:
          command: cd client && npm run test
          working-directory: ./client
        env:
          API_URL: http://localhost:3001
          CYPRESS_DEFAULT_COMMAND_TIMEOUT: ${{secrets.CYPRESS_DEFAULT_COMMAND_TIMEOUT}}
          REQWISE_SLACK_SCOPES: ${{secrets.REQWISE_SLACK_SCOPES}}
          REQWISE_SLACK_CLIENT_ID: ${{secrets.REQWISE_SLACK_CLIENT_ID}}
          REQWISE_SLACK_CLIENT_SECRET: ${{secrets.REQWISE_SLACK_CLIENT_SECRET}}
          JWT_KEY: ${{secrets.JWT_KEY}}
          HASHID_KEY: ${{secrets.HASHID_KEY}}
          KNEXMODE: dev
