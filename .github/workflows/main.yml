name: CI

on:
  push:
    branches:
      - master
      - release/*

jobs:
  firebase-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-node@master
        with:
          node-version: "10"
      - name: Install dependencies
        working-directory: ./client
        run: |
          npm install
      - name: Build client
        working-directory: ./client
        run: |
          npm run build
      - uses: cypress-io/github-action@v2
        with:
          start: npm run dev
          wait-on: "http://localhost:3000/"
          wait-on-timeout: 120
          working-directory: ./client
        env:
          TESTING_API_URL: ${{secrets.TESTING_API_URL}}
          CYPRESS_DEFAULT_COMMAND_TIMEOUT: ${{secrets.CYPRESS_DEFAULT_COMMAND_TIMEOUT}}
      - uses: w9jds/firebase-action@master
        with:
          args: deploy
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          PROJECT_PATH: ./client
  appengine-deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server
    steps:
      - uses: actions/checkout@master
      - name: add env variables to app.yaml
        run: 'printf "\nenv_variables:\n  DB_NAME: \"$DB_NAME\"\n  DB_USERNAME: \"$DB_USERNAME\"\n  DB_PASS: \"$DB_PASS\"\n  DB_HOST: \"$DB_HOST\"\n  DB_PORT: $DB_PORT\n  JWT_KEY: \"$JWT_KEY\"\n  HASHID_KEY: \"$HASHID_KEY\"\n" >> app.yaml'
        shell: bash
        env:
          DB_NAME: ${{secrets.DB_NAME}}
          DB_USERNAME: ${{secrets.DB_USERNAME}}
          DB_PASS: ${{secrets.DB_PASS}}
          DB_HOST: ${{secrets.DB_HOST}}
          DB_PORT: ${{secrets.DB_PORT}}
          JWT_KEY: ${{secrets.JWT_KEY}}
          HASHID_KEY: ${{secrets.HASHID_KEY}}
      - name: Initialize Google Cloud SDK
        uses: zxyle/publish-gae-action@master
        with:
          service_account_email: ${{ secrets.GCP_SA_EMAIL }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ secrets.PROJECT_ID }}
          gae_config_path: ./server/app.yaml
      - name: echo key to file
        run: 'echo "$GCP_SA_KEY" | base64 -d > client-secret.json'
        shell: bash
        env:
          GCP_SA_KEY: ${{secrets.GCP_SA_KEY}}
      - name: Publish app to Google App Engine
        run: |
          # This client-secret.json is converted from GCP_SA_KEY.
          gcloud auth activate-service-account ${{ secrets.GCP_SA_EMAIL }} --key-file=client-secret.json
          gcloud config set project ${{ secrets.PROJECT_ID }}
          gcloud app deploy --stop-previous-version --promote --version=staging
