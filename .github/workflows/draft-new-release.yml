name: "Draft new release"

on:
  issues:
    types: [opened, labeled]

jobs:
  draft-new-release:
    name: "Draft a new release"
    runs-on: ubuntu-latest
    # Only run for issues with a specific title and label. Not strictly required but makes finding the release issue again later easier.
    # There is also a whitelist that you may want to use to restrict, who can trigger this workflow.
    # Unfortunately, we cannot create an array on the fly, so the whitelist is just comma-separated.
    if: startsWith(github.event.issue.title, 'Release version') && contains(github.event.issue.labels.*.name, 'release') && contains('rosslh', github.event.issue.user.login)
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
      - name: Extract version from issue title
        run: |
          TITLE="${{ github.event.issue.title }}"
          VERSION=${TITLE#Release version }

          echo "::set-env name=RELEASE_VERSION::$VERSION"

      - name: Create release branch
        run: git checkout -b release/${{ env.RELEASE_VERSION }}

      # In order to make a commit, we need to initialize a user.
      # You may choose to write something less generic here if you want, it doesn't matter functionality wise.
      - name: Initialize mandatory git config
        run: |
          git config user.name "GitHub actions"
          git config user.email noreply@github.com

      - name: Push new branch
        run: git push origin release/${{ env.RELEASE_VERSION }}

      - name: Create pull request
        uses: thomaseizinger/create-pull-request@1.0.0
        with:
          GITHUB_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}
          head: release/${{ env.RELEASE_VERSION }}
          base: master
          title: ${{ github.event.issue.title }}
          body: |
            Hi @${{ github.event.issue.user.login }}!

            This PR was created in response to this release issue: #${{ github.event.issue.number }}.


            Merging this PR will update the master branch and create a GitHub release.
