name: Deploy (QA)

on:
  push:
    branches:
      - master

jobs:
  firebase-deploy-qa:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v2.3.2
      - uses: actions/setup-node@v2.1.2
        with:
          node-version: "10"
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        working-directory: ./client
        run: |
          npm ci --no-optional
      - name: Build client
        working-directory: ./client
        run: |
          npm run build
        env:
          REQWISE_SLACK_SCOPES: ${{secrets.REQWISE_SLACK_SCOPES}}
          REQWISE_SLACK_CLIENT_ID: ${{secrets.REQWISE_SLACK_CLIENT_ID}}
          API_URL: https://qa-dot-reqwise.uc.r.appspot.com
      - uses: w9jds/firebase-action@6d1a577caffa15dfad8cc3d95e8ea2ac7ff51f7f
        with:
          args: deploy
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          PROJECT_PATH: ./client
          PROJECT_ID: reqwise-qa
  appengine-deploy-qa:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    timeout-minutes: 15
    defaults:
      run:
        working-directory: ./server
    steps:
      - uses: actions/checkout@v2.3.2
      - name: add env variables to app.yaml
        run: 'printf "\nenv_variables:\n  KNEXMODE: \"qa\"\n  REQWISE_SLACK_CLIENT_ID: \"$REQWISE_SLACK_CLIENT_ID\"\n  REQWISE_SLACK_CLIENT_SECRET: \"$REQWISE_SLACK_CLIENT_SECRET\"\n  SENDGRID_API_KEY: \"$SENDGRID_API_KEY\"\n  REQWISE_SLACK_SCOPES: \"$REQWISE_SLACK_SCOPES\"\n  QA_DB_NAME: \"$QA_DB_NAME\"\n  QA_DB_USERNAME: \"$QA_DB_USERNAME\"\n  QA_DB_PASS: \"$QA_DB_PASS\"\n  QA_DB_HOST: \"$QA_DB_HOST\"\n  QA_DB_PORT: $QA_DB_PORT\n  JWT_KEY: \"$JWT_KEY\"\n  HASHID_KEY: \"$HASHID_KEY\"\n" >> app.yaml'
        shell: bash
        env:
          QA_DB_NAME: ${{secrets.QA_DB_NAME}}
          QA_DB_USERNAME: ${{secrets.QA_DB_USERNAME}}
          QA_DB_PASS: ${{secrets.QA_DB_PASS}}
          QA_DB_HOST: ${{secrets.QA_DB_HOST}}
          QA_DB_PORT: ${{secrets.QA_DB_PORT}}
          JWT_KEY: ${{secrets.JWT_KEY}}
          HASHID_KEY: ${{secrets.HASHID_KEY}}
          REQWISE_SLACK_CLIENT_ID: ${{secrets.REQWISE_SLACK_CLIENT_ID}}
          REQWISE_SLACK_CLIENT_SECRET: ${{secrets.REQWISE_SLACK_CLIENT_SECRET}}
          REQWISE_SLACK_SCOPES: ${{secrets.REQWISE_SLACK_SCOPES}}
          SENDGRID_API_KEY: ${{secrets.SENDGRID_API_KEY}}
      - name: Initialize Google Cloud SDK
        uses: rosslh/deploy-gae-action@master
        with:
          service_account_email: ${{ secrets.GCP_SA_EMAIL }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ secrets.PROJECT_ID }}
          gae_config_path: ./server/app.yaml
      - name: echo key to file
        run: 'echo "$GCP_SA_KEY" | base64 -d > client-secret.json'
        shell: bash
        env:
          GCP_SA_KEY: ${{secrets.GCP_SA_KEY}}
      - name: Publish app to Google App Engine
        run: |
          # This client-secret.json is converted from GCP_SA_KEY.
          gcloud auth activate-service-account ${{ secrets.GCP_SA_EMAIL }} --key-file=client-secret.json
          gcloud config set project ${{ secrets.PROJECT_ID }}
          gcloud app deploy --stop-previous-version --no-promote --version=qa
